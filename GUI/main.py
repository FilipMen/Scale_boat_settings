# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import time
import string
#import pynmea2
import pandas as pd
from PyQt5 import QtWebEngineWidgets
import json
from  PyQt5.QtWebEngineWidgets import *
from PyQt5.QtCore import *
import numpy as np
from decimal import Decimal
from pubnub.pnconfiguration import PNConfiguration
from pubnub.pubnub import PubNub
from pubnub.exceptions import PubNubException
from PyQt5.QtWidgets import *
import pyqtgraph as pg
from utils import TimeAxisItem, timestamp, timestamp1
from qtwidgets import Toggle
import serial
import serial.tools.list_ports
import keyboard



BaudRates = ['2400','4800','9600','19200','57600','115200']

pnChannel = "raspi-tracker"

coor = np.genfromtxt("coordsResuMP.txt", delimiter = " ", skip_header = 1)
pnconfig = PNConfiguration()
pnconfig.publish_key = "pub-c-538b35ba-c872-43c7-8d00-6e6b98ce8d18"
pnconfig.subscribe_key = "sub-c-700df5b3-5efa-4d2a-89d6-f51d59e758a2"
pnconfig.uuid = "boat"
pnconfig.ssl = False

pubnub = PubNub(pnconfig)
pubnub.subscribe().channels(pnChannel).execute()


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(893, 712)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setMinimumSize(QtCore.QSize(0, 0))
        self.groupBox.setMaximumSize(QtCore.QSize(1920, 1920))
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.line = QtWidgets.QFrame(self.groupBox)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_3.addWidget(self.line, 2, 0, 1, 5)
        self.radioControl = Toggle(self.groupBox)
        self.radioControl.setObjectName("radioControl")
        self.gridLayout_3.addWidget(self.radioControl, 1, 2, 1, 2)
        self.label_17 = QtWidgets.QLabel(self.groupBox)
        self.label_17.setObjectName("label_17")
        self.gridLayout_3.addWidget(self.label_17, 1, 0, 1, 2)
        self.label_16 = QtWidgets.QLabel(self.groupBox)
        self.label_16.setObjectName("label_16")
        self.gridLayout_3.addWidget(self.label_16, 0, 0, 1, 2)
        self.enableBoat = Toggle(self.groupBox)
        self.enableBoat.setObjectName("enableBoat")
        self.gridLayout_3.addWidget(self.enableBoat, 0, 2, 1, 2)
        self.widget_2 = QtWidgets.QWidget(self.groupBox)
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.verticalSlider = QtWidgets.QSlider(self.widget_2)
        self.verticalSlider.setMinimumSize(QtCore.QSize(50, 0))
        self.verticalSlider.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider.setTickPosition(QtWidgets.QSlider.TicksBothSides)
        self.verticalSlider.setMaximum(180)
        self.verticalSlider.setTickInterval(10)
        self.verticalSlider.setObjectName("verticalSlider")
        self.gridLayout_8.addWidget(self.verticalSlider, 1, 1, 1, 1)
        self.PWM1 = QtWidgets.QLineEdit(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PWM1.sizePolicy().hasHeightForWidth())
        self.PWM1.setSizePolicy(sizePolicy)
        self.PWM1.setMinimumSize(QtCore.QSize(50, 0))
        self.PWM1.setMaximumSize(QtCore.QSize(50, 16777215))
        self.PWM1.setReadOnly(True)
        self.PWM1.setObjectName("PWM1")
        self.gridLayout_8.addWidget(self.PWM1, 3, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.gridLayout_8.addWidget(self.label_7, 0, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem, 3, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem1, 3, 2, 1, 1)
        self.gridLayout_3.addWidget(self.widget_2, 3, 0, 2, 4)
        self.widget = QtWidgets.QWidget(self.groupBox)
        self.widget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.widget.setObjectName("widget")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem2, 3, 0, 1, 1)
        self.rudder = QtWidgets.QLineEdit(self.widget)
        self.rudder.setMaximumSize(QtCore.QSize(50, 21))
        self.rudder.setAlignment(QtCore.Qt.AlignCenter)
        self.rudder.setReadOnly(True)
        self.rudder.setObjectName("rudder")
        self.gridLayout_7.addWidget(self.rudder, 3, 1, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem3, 3, 2, 1, 1)
        self.horizontalSlider = QtWidgets.QSlider(self.widget)
        self.horizontalSlider.setMaximum(180)
        self.horizontalSlider.setSliderPosition(128)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.gridLayout_7.addWidget(self.horizontalSlider, 1, 0, 1, 3)
        self.label_14 = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_14.sizePolicy().hasHeightForWidth())
        self.label_14.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        self.label_14.setFont(font)
        self.label_14.setAlignment(QtCore.Qt.AlignCenter)
        self.label_14.setObjectName("label_14")
        self.gridLayout_7.addWidget(self.label_14, 0, 0, 1, 3)
        self.gridLayout_3.addWidget(self.widget, 5, 0, 1, 4)
        self.gridLayout_2.addWidget(self.groupBox, 2, 0, 1, 1)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMaximumSize(QtCore.QSize(16777215, 320))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_2)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.Roll = timePlot1(self.tab_2)
        self.Roll.setObjectName("Roll")
        self.gridLayout_5.addWidget(self.Roll, 0, 0, 1, 1)
        self.Pitch = timePlot1(self.tab_2)
        self.Pitch.setObjectName("Pitch")
        self.gridLayout_5.addWidget(self.Pitch, 0, 1, 1, 1)
        self.Yaw = timePlot1(self.tab_2)
        self.Yaw.setObjectName("Yaw")
        self.gridLayout_5.addWidget(self.Yaw, 0, 2, 1, 1)
        self.tabWidget.addTab(self.tab_2, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.AccX = timePlot(self.tab)
        self.AccX.setObjectName("AccX")
        self.gridLayout_4.addWidget(self.AccX, 0, 0, 1, 1)
        self.AccY = timePlot(self.tab)
        self.AccY.setObjectName("AccY")
        self.gridLayout_4.addWidget(self.AccY, 0, 1, 1, 1)
        self.tabWidget.addTab(self.tab, "")
        self.gridLayout_2.addWidget(self.tabWidget, 0, 1, 1, 1)
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_3.sizePolicy().hasHeightForWidth())
        self.groupBox_3.setSizePolicy(sizePolicy)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.webEngineView = QtWebEngineWidgets.QWebEngineView(self.groupBox_3)
        self.webEngineView.setUrl(QtCore.QUrl("about:blank"))
        self.webEngineView.setObjectName("webEngineView")
        self.gridLayout_6.addWidget(self.webEngineView, 0, 0, 1, 1)
        self.gridLayout_2.addWidget(self.groupBox_3, 2, 1, 1, 1)
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_2.sizePolicy().hasHeightForWidth())
        self.groupBox_2.setSizePolicy(sizePolicy)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout.setObjectName("gridLayout")
        self.accy1 = QtWidgets.QLineEdit(self.groupBox_2)
        self.accy1.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.accy1.setFont(font)
        self.accy1.setReadOnly(True)
        self.accy1.setObjectName("accy1")
        self.gridLayout.addWidget(self.accy1, 4, 1, 1, 1)
        self.vel1 = QtWidgets.QLineEdit(self.groupBox_2)
        self.vel1.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.vel1.setFont(font)
        self.vel1.setReadOnly(True)
        self.vel1.setObjectName("vel1")
        self.gridLayout.addWidget(self.vel1, 6, 1, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_13.sizePolicy().hasHeightForWidth())
        self.label_13.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.gridLayout.addWidget(self.label_13, 9, 0, 1, 1)
        self.curr1 = QtWidgets.QLineEdit(self.groupBox_2)
        self.curr1.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.curr1.setFont(font)
        self.curr1.setReadOnly(True)
        self.curr1.setObjectName("curr1")
        self.gridLayout.addWidget(self.curr1, 7, 1, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_11.sizePolicy().hasHeightForWidth())
        self.label_11.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.gridLayout.addWidget(self.label_11, 6, 0, 1, 1)
        self.pitch1 = QtWidgets.QLineEdit(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pitch1.sizePolicy().hasHeightForWidth())
        self.pitch1.setSizePolicy(sizePolicy)
        self.pitch1.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.pitch1.setFont(font)
        self.pitch1.setReadOnly(True)
        self.pitch1.setObjectName("pitch1")
        self.gridLayout.addWidget(self.pitch1, 0, 1, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_9.sizePolicy().hasHeightForWidth())
        self.label_9.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.gridLayout.addWidget(self.label_9, 2, 0, 1, 1)
        self.vol1 = QtWidgets.QLineEdit(self.groupBox_2)
        self.vol1.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.vol1.setFont(font)
        self.vol1.setReadOnly(True)
        self.vol1.setObjectName("vol1")
        self.gridLayout.addWidget(self.vol1, 9, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_12.sizePolicy().hasHeightForWidth())
        self.label_12.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.gridLayout.addWidget(self.label_12, 7, 0, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_15.sizePolicy().hasHeightForWidth())
        self.label_15.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.gridLayout.addWidget(self.label_15, 4, 0, 1, 1)
        self.yaw1 = QtWidgets.QLineEdit(self.groupBox_2)
        self.yaw1.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.yaw1.setFont(font)
        self.yaw1.setReadOnly(True)
        self.yaw1.setObjectName("yaw1")
        self.gridLayout.addWidget(self.yaw1, 2, 1, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_10.sizePolicy().hasHeightForWidth())
        self.label_10.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.gridLayout.addWidget(self.label_10, 3, 0, 1, 1)
        self.roll1 = QtWidgets.QLineEdit(self.groupBox_2)
        self.roll1.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.roll1.setFont(font)
        self.roll1.setReadOnly(True)
        self.roll1.setObjectName("roll1")
        self.gridLayout.addWidget(self.roll1, 1, 1, 1, 1)
        self.accx1 = QtWidgets.QLineEdit(self.groupBox_2)
        self.accx1.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.accx1.setFont(font)
        self.accx1.setReadOnly(True)
        self.accx1.setObjectName("accx1")
        self.gridLayout.addWidget(self.accx1, 3, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)
        self.gridLayout_2.addWidget(self.groupBox_2, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 893, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "Control"))
        self.radioControl.setText(_translate("MainWindow", "Enable"))
        self.label_17.setText(_translate("MainWindow", "Radio control:"))
        self.label_16.setText(_translate("MainWindow", "Enable boat:"))
        self.enableBoat.setText(_translate("MainWindow", "Enable"))
        self.label_7.setText(_translate("MainWindow", "Motor power"))
        self.label_14.setText(_translate("MainWindow", "Rudder angle"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tab 1"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Geolocalization"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Variables"))
        self.label_13.setText(_translate("MainWindow", "Voltage:"))
        self.label_11.setText(_translate("MainWindow", "Velocity:"))
        self.label_9.setText(_translate("MainWindow", "Yaw:"))
        self.label.setText(_translate("MainWindow", "Pitch:"))
        self.label_12.setText(_translate("MainWindow", "Current:"))
        self.label_15.setText(_translate("MainWindow", "AccY:"))
        self.label_10.setText(_translate("MainWindow", "AccX:"))
        self.label_2.setText(_translate("MainWindow", "Roll:"))
        #-------------------------- QT designer -------------------------------#
        self.webEngineView.load(QUrl("file:///C:/Users/mendo/OneDrive%20-%20Universidad%20EAFIT/Energetica%202030/Barco%20Fluvial/TG%20-%20embarcaci%C3%B3n/Maps/Map.html"))
        self.PWM1.setText(str(self.verticalSlider.value()))
        self.setRuderValue()
        self.verticalSlider.valueChanged.connect(self.setMotor1Value)
        self.horizontalSlider.valueChanged.connect(self.setRuderValue)

    def setMotor1Value(self):
        self.PWM1.setText(str(round(self.verticalSlider.value()*100/180)))

    def setRuderValue(self):
        self.rudder.setText(str(round(-90+self.horizontalSlider.value())))






class timePlot(QWidget):
    def __init__(self, parent=None, yname='Reading / mV'):
        QWidget.__init__(self, parent)
        self.plot = pg.PlotWidget(
            title="Example plot",
            labels={'left': yname},
            axisItems={'bottom': TimeAxisItem(orientation='bottom')}
        )
        self.plot.setYRange(0, 5000)
        self.plot.setXRange(timestamp(), timestamp() + 20)
        self.plot.showGrid(x=True, y=True)

        self.layout = QGridLayout(self)
        self.layout.addWidget(self.plot, 0, 0)

        self.plotCurve = self.plot.plot()
        self.plotCurve1 = self.plot.plot()

        self.plotData = {'x': [], 'y': [], 'z': []}

    def updatePlot(self, newValue, newValue1):
        self.plotData['y'].append(newValue)
        self.plotData['z'].append(newValue1)
        self.plotData['x'].append(timestamp1())
        self.plot.setYRange(min(self.plotData['y'][-150:] + self.plotData['z'][-150:]),
                            max(self.plotData['y'][-150:] + self.plotData['z'][-150:]))
        self.plot.setXRange(timestamp() - 15, timestamp() + 5)
        self.plotCurve.setData(self.plotData['x'], self.plotData['y'], pen=pg.mkPen(color=(255, 0, 0)))
        self.plotCurve1.setData(self.plotData['x'], self.plotData['z'], pen=pg.mkPen(color=(0, 255, 0)))


class Graphic_interface(QtWidgets.QMainWindow):
    def __init__(self, parent=None):
        QtWidgets.QWidget.__init__(self, parent=None)
        self.serialPort = serial.Serial()
        # ***** Tool bar declaration ********
        toolBar = QToolBar("Tool bar")
        toolButton = QToolButton()
        toolButton.setText("Select COM: ")
        toolButton.setCheckable(False)
        toolBar.addWidget(toolButton)
        self.addToolBar(toolBar)

        # ******** Text "Select COM" declaration ********
        toolButton.setText("Select COM: ")
        toolButton.setCheckable(False)
        toolBar.addWidget(toolButton)

        # ******** ComboBox for selecting the COM port ***
        self.combo = QComboBox(self)
        Coms = GetComPorts()
        for element in Coms:
            self.combo.addItem(element)
        toolBar.addWidget(self.combo)

        # ******** Text "Select BaudRate" declaration ****
        toolButton = QToolButton()
        toolButton.setText(" Select BaudRate: ")
        toolButton.setCheckable(False)
        toolBar.addWidget(toolButton)

        # ******** ComboBox for selecting the BaudRate ****
        self.combo1 = QComboBox(self)
        for element in BaudRates:
            self.combo1.addItem(element)
        toolBar.addWidget(self.combo1)

        # ******** Open Button *****************************
        self.openCOM = QPushButton()
        self.openCOM.setText("Open")
        self.openCOM.clicked.connect(self.uSerial)
        toolBar.addWidget(self.openCOM)


        self.MainWindow = Ui_MainWindow()
        self.MainWindow.setupUi(self)

        self.mode = 10
        self.MainWindow.enableBoat.stateChanged.connect(self.setMode)
        self.MainWindow.radioControl.stateChanged.connect(self.setMode)

    def setMode(self):
        if self.MainWindow.enableBoat.isChecked():
            if self.MainWindow.radioControl.isChecked():
                self.mode = 20
            else:
                self.mode = 30
        else:
            self.mode = 10

    def UpdateSerial(self, COMport, BaudRate):
        try:
            if self.serialPort.isOpen():
                self.serialPort.close()
            self.serialPort = serial.Serial(COMport, BaudRate)
        except Exception as e:
            print(e)

    def uSerial(self):
        self.UpdateSerial(self.combo.currentText(), int(self.combo1.currentText()))

    def resizeEvent(self, event):
        super().resizeEvent(event)

    def keyReleaseEvent(self, event):
        if event.key() == QtCore.Qt.Key_W:
            if self.MainWindow.verticalSlider.value() < 180:
                self.MainWindow.verticalSlider.setValue(self.MainWindow.verticalSlider.value()+1)
        if event.key() == QtCore.Qt.Key_S:
            if self.MainWindow.verticalSlider.value() > 0:
                self.MainWindow.verticalSlider.setValue(self.MainWindow.verticalSlider.value() - 1)

        return super().keyReleaseEvent(event)

    def closeEvent(self, event):
        self.serialPort.close()
        print('El programa ha terminado!')

    def event(self, e):
        if not isinstance(e, (
            QtCore.QEvent,
            QtGui.QKeyEvent,
            QtGui.QCloseEvent,
        )):
            print("unknown event: %r %r", e.type(), e)
        return super().event(e)

class timePlot1(QWidget):
    def __init__(self, parent=None, yname='Reading / mV'):
        QWidget.__init__(self, parent)
        self.plot = pg.PlotWidget(
            title="Example plot",
            labels={'left': yname},
            axisItems={'bottom': TimeAxisItem(orientation='bottom')}
        )
        self.plot.setYRange(0, 5000)
        self.plot.setXRange(timestamp(), timestamp() + 20)
        self.plot.showGrid(x=True, y=True)

        self.layout = QGridLayout(self)
        self.layout.addWidget(self.plot, 0, 0)

        self.plotCurve = self.plot.plot()
        self.plotCurve1 = self.plot.plot()
        self.plotCurve2 = self.plot.plot()

        self.plotData = {'x': [], 'y': [], 'z': [], 'z1': []}

    def updatePlot(self, newValue, newValue1, newValue2):
        self.plotData['y'].append(newValue)
        self.plotData['z'].append(newValue1)
        self.plotData['z1'].append(newValue2)
        self.plotData['x'].append(timestamp1())
        self.plot.setYRange(min(self.plotData['y'][-150:] + self.plotData['z'][-150:] + self.plotData['z1'][-150:]),
                            max(self.plotData['y'][-150:] + self.plotData['z'][-150:] + self.plotData['z1'][-150:]))
        self.plot.setXRange(timestamp() - 15, timestamp() + 5)
        self.plotCurve.setData(self.plotData['x'], self.plotData['y'], pen=pg.mkPen(color=(255, 0, 0)))
        self.plotCurve1.setData(self.plotData['x'], self.plotData['z'], pen=pg.mkPen(color=(0, 0, 255)))
        self.plotCurve2.setData(self.plotData['x'], self.plotData['z1'], pen=pg.mkPen(color=(0, 255, 0)))



def GetComPorts():
    comlist = serial.tools.list_ports.comports()
    connected = []
    for element in comlist:
        connected.append(element.device)
    return connected



from guiLoop import guiLoop # https://gist.github.com/niccokunzmann/8673951

@guiLoop
def Main_loop():
    tx_data = {
        "1": 0,
        "2": 0,
        "3": 0,
        "m": 0
    }
    clock_count = 0
    sample_time = 0.05
    yield_time = 0.01
    cLon1 = 0
    cLat1 = 0
    while True:
        if ui.serialPort.isOpen():
            if clock_count >= sample_time/yield_time:
                clock_count = 0
                tx_data["1"] = ui.MainWindow.horizontalSlider.value()
                tx_data["2"] = keyboard.is_pressed('a') * ui.MainWindow.verticalSlider.value()
                tx_data["3"] = keyboard.is_pressed('d') * ui.MainWindow.verticalSlider.value()
                tx_data["m"] = ui.mode
                ui.serialPort.write((json.dumps(tx_data)+'\n').encode())
                #print(json.dumps(tx_data))
            else:
                clock_count += 1

            if ui.serialPort.in_waiting:
                rx = ui.serialPort.readline().decode("utf-8").rstrip('\r\n')
                try:
                    data = json.loads(rx)
                    ''' 
                    IMU information, with this information is needed to calculate the Roll, Pitch and Yaw
                    '''
                    ax = data["ax"]
                    ay = data["ay"]
                    az = data["az"]
                    gx = data["gx"]
                    gy = data["gy"]
                    gz = data["gz"]
                    mx = data["mx"]
                    my = data["my"]
                    mz = data["mz"]
                    # Update plots
                    ui.MainWindow.Roll.updatePlot(ax, ay, az)
                    ui.MainWindow.Pitch.updatePlot(gx, gy, gz)
                    ui.MainWindow.Yaw.updatePlot(mx, my, mz)
                    bVol = data["bVol"]*0.1875*3.03763
                    cLat = data["cLat"]/100000
                    cLon = data["cLon"] / 100000
                    cLatS = str(cLat)
                    pos = cLatS.find('.')
                    cLatD = float(cLatS[0:pos-2]) + float(cLatS[pos-2:])/60.0
                    cLonS = str(cLon)
                    pos = cLonS.find('.')
                    cLonD = float(cLonS[0:pos - 2]) - float(cLonS[pos - 2:]) / 60.0
                    if (cLatD != cLat1 or cLonD != cLon1):
                        cLat1 = cLatD
                        cLon1 = cLonD
                        updateCoor(cLatD, cLonD)
                        print(f"{cLatD},{cLonD}")
                    #ui.MainWindow.pitch1.setText(str(round(pitch, 3)))
                    #ui.MainWindow.roll1.setText(str(round(roll, 3)))
                    #ui.MainWindow.yaw1.setText(str(round(yaw, 3)))
                    #ui.MainWindow.accx1.setText(str(round(accX, 3)))
                    #ui.MainWindow.accy1.setText(str(round(accY, 3)))
                    ui.MainWindow.vol1.setText(str(round(bVol, 3)))
                except:
                    print("No Json format")
                #print(rx)

        yield yield_time


def updateCoor(lat, lng):
        try:
            envelope = pubnub.publish().channel(pnChannel).message({
                'lat': lat,
                'lng': lng
            }).sync()
            print("publish timetoken: %d" % envelope.result.timetoken)
        except PubNubException as e:
            print(e)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = Graphic_interface()
    Main_loop(ui)
    ui.show()
    sys.exit(app.exec_())
